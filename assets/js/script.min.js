/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/jsx/script.js":
/*!***************************!*\
  !*** ./src/jsx/script.js ***!
  \***************************/
/***/ (() => {

eval("// $.noConflict();\njQuery(document).ready(function () {\n  const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n  const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));\n  var page;\n  var order;\n  var order_by;\n  var type;\n  var query;\n  var limit;\n  var filter;\n  var category;\n\n  //Padrão Carregamento inicial pagina 1 oren update date\n  load_data(true, 1, order);\n  lnd_update_catalog(order, type);\n\n  // Metodo resposavel pela paginação\n  $(document).on('click', '.page-link', function () {\n    page = $(this).data('page_number');\n    load_data(true, page, order, type, query, order_by, limit, filter, category);\n  });\n\n  //Ordenação por tipo plugin ou tema\n  $(\"input[name=lnd-radio-type]\").on(\"change\", \"[data-order_data]\", function (e) {}).bind(\"change\", \"[data-order_data]\", function (e) {\n    type = $(\"input[name=lnd-radio-type]:checked\").val();\n    load_data(true, 1, order, type, query, order_by, limit, filter, category);\n  });\n\n  /**\r\n   * Metodo responsavel pela ordenação all, free, installed\r\n   */\n  $(\"input[name=lnd-radio-control]\").on(\"change\", \"[data-order_data]\", function (e) {}).bind(\"change\", \"[data-order_data]\", function (e) {\n    filter = $(\"input[name=lnd-radio-control]:checked\").data('order_data');\n    load_data(true, 1, order, type, query, order_by, limit, filter, category);\n  });\n\n  //Ordenação update ou name\n  $(\"input[name=lnd-radio-order]\").on(\"change\", \"[data-order_data]\", function (e) {}).bind(\"change\", \"[data-order_data]\", function (e) {\n    order = $(\"input[name=lnd-radio-order]:checked\").val();\n    load_data(true, 1, order, type, query, order_by, limit, filter, category);\n  });\n\n  //Ordenação maior menor\n  $(\"input[name=lnd-radio-order-by]\").on(\"change\", \"[data-order_data]\", function (e) {}).bind(\"change\", \"[data-order_data]\", function (e) {\n    order_by = $(\"input[name=lnd-radio-order-by]:checked\").val();\n    load_data(true, 1, order, type, query, order_by, limit, filter, category);\n  });\n\n  /**\r\n   * Metodo resonsavel pela pesquisa\r\n   */\n  var typingTimer;\n  $('#lnd-search-box').on('input', function (event) {\n    //timer identifier\n    clearTimeout(typingTimer);\n    typingTimer = setTimeout(function () {\n      query = $('#lnd-search-box').val();\n      load_data(true, 1, order, type, query, order_by, limit, filter, category);\n    }, 1000);\n  });\n\n  /**\r\n   * metod responsavel pela quantidade no grid\r\n   */\n  $(\"#lnd-form-select-grid\").on(\"change\", \"option\", function (e) {}).bind(\"change\", \"option\", function (e) {\n    limit = $(\"#lnd-form-select-grid\").val();\n    load_data(true, 1, order, type, query, order_by, limit, filter, category);\n  });\n\n  /**\r\n   * reset filters\r\n   */\n  $('#lnd-reset-filters').on('click', function (e) {\n    $(\"#lnd-order-desc\").prop('checked', true);\n    $(\"#lnd-radio-type-plugin\").prop('checked', false);\n    $(\"#lnd-radio-type-theme\").prop('checked', false);\n    $(\"#lnd-radio-control-all\").prop('checked', true);\n    $(\"#lnd-order-update\").prop('checked', true);\n    $('#lnd-search-box').val(null);\n    $(\"#lnd-form-select-grid\").val('30').prop('selected', true);\n    $(\"#lnd-form-select-category\").val('').prop('selected', true);\n    page = undefined;\n    order = undefined;\n    order_by = undefined;\n    type = undefined;\n    query = undefined;\n    limit = undefined;\n    filter = undefined;\n    category = undefined;\n    load_data(true, 1, 'update_date');\n  });\n\n  /**\r\n   * Metodo responsavel por chamar categorias\r\n   */\n  $(\"#lnd-form-select-category\").on(\"change\", \"option\", function (e) {}).bind(\"change\", \"option\", function (e) {\n    category = $(\"#lnd-form-select-category\").val();\n    load_data(true, 1, order, type, query, order_by, limit, filter, category);\n  });\n\n  /**\r\n   * Metodo responsavel pela instalação de temas e plugins\r\n   */\n  $(document).on('click', '#lnd-install', function () {\n    var name = $(this).data('lnd_name');\n    var itens = $(this).data('lnd_itens');\n    var type = $(this).data('lnd_type');\n    var version = $(this).data('lnd_version');\n    var footer = $(`.lnd-footer-card-${name}`);\n    var btn = $(this);\n    var data = {\n      action: 'lnd_install_itens',\n      _ajax_nonce: ajax_var.nonce,\n      type: type,\n      name: name,\n      version: version,\n      itens: itens\n    };\n    $.ajax({\n      url: ajax_var.url,\n      method: \"POST\",\n      data: data,\n      beforeSend: function () {\n        $(btn).buttonLoader('start');\n        $('.lnd-footer-card').addClass('lnd-alert-card');\n      },\n      success: function (data) {\n        // console.log(data.status)\n        const menssage = data['msg'];\n        if (data.status === true) {\n          // footer.messageLoader(true)\n          footer.html(`<div class=\"alerts\"><div class=\"lnd-icon-success\"><i class=\"fa fa-check\"></i></div><strong>Success!</strong> ${menssage}</div>`);\n        }\n        if (data.status === false) {\n          footer.html(`<div class=\"alerts\"><div class=\"lnd-icon-danger\"><i class=\"fa fa-times-circle\"></i></div><strong>Error!</strong> ${menssage}</div>`);\n        }\n      },\n      complete: function () {\n        setTimeout(function () {\n          $(btn).buttonLoader('stop');\n        }, 5000);\n        load_data(true, page, order, type, query, order_by, limit, filter, category);\n      }\n    });\n  });\n\n  /**\r\n   * Metodo responsavel por ativar tema e plugins\r\n   */\n  $(document).on('click', '#lnd-btn-activate', function () {\n    var type = $(this).data('lnd_type');\n    var itens = $(this).data('lnd_itens');\n    var filepath = $(this).data('lnd_filepath');\n    var name = $(this).data('lnd_name');\n    var btn = $(this);\n    var data = {\n      action: 'lnd_activate_itens',\n      _ajax_nonce: ajax_var.nonce,\n      type: type,\n      name: name,\n      filepath: filepath,\n      itens: itens\n    };\n    console.log(filepath);\n    $.ajax({\n      url: ajax_var.url,\n      method: \"POST\",\n      data: data,\n      beforeSend: function () {\n        $(btn).buttonLoader('start');\n      },\n      success: function (data) {\n        const menssage = data['msg'];\n        $(`.lnd-footer-card-${name}`).html(`<div class=\"alerts\"><div class=\"lnd-icon-success\"><i class=\"fa fa-check\"></i></div><strong>Success!</strong> ${menssage}</div>`);\n      },\n      complete: function () {\n        setTimeout(function () {\n          $(btn).buttonLoader('stop');\n        }, 5000);\n        if (type == 'theme') {\n          location.reload();\n        }\n        load_data(true, page, order, type, query, order_by, limit, filter, category);\n      }\n    });\n  });\n\n  /**\r\n   * Metodo responsavel pela atualizaçãod de plugins e temas\r\n   */\n  $(document).on('click', '#lnd-btn-update', function () {\n    var page = $(\"#page-number\").data('page_active');\n    var order = $(\"input[name=lnd-radio-order]:checked\").data('order_data');\n    var type = $(this).data('lnd_type');\n    var query = $('#lnd-search-box').val();\n    var order_by = $(\"input[name=lnd-radio-order-by]:checked\").val();\n    var limit = $(\"#lnd-form-select-grid\").val();\n    var filter = $(\"input[name=lnd-radio-control]:checked\").data('order_data');\n    var category = $(\"#lnd-form-select-category\").val();\n    var itens = $(this).data('lnd_itens');\n    var name = $(this).data('lnd_name');\n    var version = $(this).data('lnd_version');\n    var btn = $(this);\n    var data = {\n      action: 'lnd_update_itens',\n      _ajax_nonce: ajax_var.nonce,\n      type: type,\n      lnd_name: name,\n      lnd_version: version,\n      itens: itens\n    };\n    $.ajax({\n      url: ajax_var.url,\n      method: \"POST\",\n      data: data,\n      beforeSend: function () {\n        $(btn).buttonLoader('start');\n      },\n      success: function (data) {\n        const menssage = data['msg'];\n        $(`.lnd-footer-card-${name}`).html(`<div class=\"alerts\"><div class=\"lnd-icon-success\"><i class=\"fa fa-check\"></i></div><strong>Success!</strong> ${menssage}</div>`);\n      },\n      complete: function () {\n        setTimeout(function () {\n          $(btn).buttonLoader('stop');\n        }, 5000);\n        load_data(true, page, order, type, query, order_by, limit, filter, category);\n      }\n    });\n  });\n\n  //function spinner\n  (function ($) {\n    $.fn.buttonLoader = function (action) {\n      var self = $(this);\n      //start loading animation\n      if (action == 'start') {\n        if ($(self).attr(\"disabled\") == \"disabled\") {\n          e.preventDefault();\n        }\n        $(self).attr('data-btn-text', $(self).text());\n        $(self).html('<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Loading...');\n        $(self).addClass('active');\n      }\n      //stop loading animation\n      if (action == 'stop') {\n        $(self).html($(self).attr('data-btn-text'));\n        $(self).removeClass('active');\n      }\n    };\n  })($);\n});\n\n/**\r\n * \r\n * @param {any} loadiv \r\n * @param {int} page \r\n * @param {string} order \r\n * @param {string} type \r\n * @param {string} query \r\n * @param {string} order_by \r\n * @param {int} limit \r\n * @param {string} filter \r\n * @param {string} category \r\n */\nfunction load_data(loadiv, page) {\n  let order = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  let type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  let query = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n  let order_by = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';\n  let limit = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : '';\n  let filter = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : '';\n  let category = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : '';\n  var load_div = $(\".ajax_load\");\n  var data = {\n    action: 'lnd_get_catalog_itens',\n    _ajax_nonce: ajax_var.nonce,\n    page: page,\n    order: order,\n    type: type,\n    query: query,\n    order_by: order_by,\n    limit: limit,\n    filter: filter,\n    category: category\n  };\n  $.ajax({\n    url: ajax_var.url,\n    method: \"POST\",\n    data: data,\n    beforeSend: function () {\n      if (loadiv == true) {\n        load_div.fadeIn().css(\"display\", \"flex\");\n      }\n    },\n    success: function (data) {\n      $('#lnd-post-grid').html(data);\n    },\n    complete: function () {\n      if (loadiv == true) {\n        load_div.fadeOut();\n      }\n    }\n  });\n}\n\n/**\r\n * Metodo responsavel por atualizar o catalogo\r\n * @param {string} order \r\n * @param {string} type \r\n */\nfunction lnd_update_catalog(order, type) {\n  var url = ajax_var.url;\n  var data = {\n    action: 'lnd_update_catalog_ajax',\n    _ajax_nonce: ajax_var.nonce\n  };\n  $('#lnd-update-catalogo').on(\"click\", function (e) {\n    e.preventDefault();\n    var btn = $(this);\n    $.ajax({\n      url: url,\n      method: 'post',\n      data: data,\n      datatype: 'json',\n      beforeSend: function () {\n        $(btn).buttonLoader('start');\n      },\n      success: function (result) {\n        action_message(result.status, result.msg);\n      },\n      complete: function () {\n        setTimeout(function () {\n          $(btn).buttonLoader('stop');\n        }, 2000);\n        load_data(true, 1, order, type);\n      }\n    });\n  });\n}\nfunction action_message(status, msg) {\n  const message = $('#alert-menssage');\n  if (status == true) {\n    message.html('<div class=\"lnd-alerts lnd-alerts-success lnd-alerts-white lnd-rounded\"> <div class=\"icon\"><i class=\"fa fa-check\"></i></div> <strong>Success!</strong> ' + msg + '!</div>');\n  }\n  if (status == false) {\n    message.html('<div class=\"lnd-alerts lnd-alerts-warning lnd-alerts-white lnd-rounded\"><div class=\"icon\"><i class=\"fa fa-warning\"></i></div><strong>Alert!</strong> ' + msg + '!</div>');\n  }\n  window.setTimeout(function () {\n    $('.lnd-alerts').fadeTo(100, 0).slideUp(1500, function () {\n      $('.lnd-alerts').remove();\n    });\n  }, 7000);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/jsx/script.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/jsx/script.js"]();
/******/ 	
/******/ })()
;